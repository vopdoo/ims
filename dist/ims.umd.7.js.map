{"version":3,"sources":["webpack://ims/./examples/views/systems/departments.vue?cd83","webpack://ims/examples/views/systems/departments.vue","webpack://ims/./examples/views/systems/departments.vue?3bad","webpack://ims/./examples/views/systems/departments.vue?d66b","webpack://ims/./examples/views/systems/departments.vue?7b56","webpack://ims/./examples/views/systems/departments.vue?67b9"],"names":[],"mappings":";;;;;;;;;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,OAAO,aAAa,YAAY,OAAO,aAAa,kDAAkD,+BAA+B,YAAY,eAAe,OAAO,iBAAiB,KAAK,yBAAyB,0BAA0B,wCAAwC,OAAO,6CAA6C,cAAc,OAAO,wGAAwG,KAAK,mDAAmD,QAAQ,oDAAoD,uBAAuB,8BAA8B,aAAa,oBAAoB,mEAAmE,iBAAiB,OAAO,4BAA4B,eAAe,OAAO,mBAAmB,KAAK,2BAA2B,QAAQ,iDAAiD,kCAAkC,2BAA2B,sCAAsC,oBAAoB,sBAAsB,oBAAoB,+BAA+B,wBAAwB,OAAO,cAAc,cAAc,OAAO,mBAAmB,QAAQ,iDAAiD,kCAAkC,2BAA2B,qBAAqB,OAAO,cAAc,cAAc,OAAO,mBAAmB,QAAQ,iDAAiD,kCAAkC,2BAA2B,qBAAqB,OAAO,cAAc,eAAe,OAAO,oCAAoC,QAAQ,qDAAqD,sCAAsC,+BAA+B,wCAAwC,oBAAoB,mBAAmB,iBAAiB,oFAAoF,yDAAyD,OAAO,gBAAgB,cAAc,OAAO,qBAAqB,QAAQ,yDAAyD,0CAA0C,mCAAmC,qBAAqB,OAAO,gBAAgB,cAAc,OAAO,qBAAqB,QAAQ,yDAAyD,0CAA0C,mCAAmC,kCAAkC,OAAO,cAAc,cAAc,OAAO,mBAAmB,QAAQ,iDAAiD,kCAAkC,2BAA2B,qBAAqB,OAAO,cAAc,oBAAoB,OAAO,6CAA6C,QAAQ,iDAAiD,kCAAkC,2BAA2B,kBAAkB,OAAO,eAAe;AAC97F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACghXgP,CAAgB,mHAAG,EAAC,C;;;;;;;;ACA1K;AAC3B;AACL;AACc;;;AAGxE;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,2CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,kG;;;;;;;ACnBf,uC;;;;;;;;ACAA;AAAA;AAAA;AAA4kB,CAAgB,klBAAG,EAAC,C","file":"ims.umd.7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Row',{attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"20\"}},[_vm._v(\"\\n             \\n        \")]),_c('Col',{staticClass:\"list-tlbr\",attrs:{\"span\":\"4\"}},[_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.addTopMenu()}}},[_vm._v(\"增加顶级部门\")])],1)],1),_c('Tree',{attrs:{\"data\":_vm.nodes,\"render\":_vm.renderContent}}),_c('Modal',{attrs:{\"title\":_vm.title,\"loading\":_vm.loading,\"class-name\":\"ce-modal\",\"mask-closable\":false,\"scrollable\":true},on:{\"on-ok\":_vm.saveMenu,\"on-cancel\":_vm.cancelAddMenu},model:{value:(_vm.is_add_menuing),callback:function ($$v) {_vm.is_add_menuing=$$v},expression:\"is_add_menuing\"}},[_c('Form',{ref:\"menuFm\",attrs:{\"model\":_vm.menuFm,\"label-position\":\"top\",\"rules\":_vm.menuFmRules}},[_c('FormItem',{attrs:{\"label\":\"类型\",\"prop\":\"type\"}},[_c('Select',{attrs:{\"placeholder\":\"类型\"},on:{\"on-change\":_vm.typeChange},model:{value:(_vm.menuFm.type),callback:function ($$v) {_vm.$set(_vm.menuFm, \"type\", $$v)},expression:\"menuFm.type\"}},_vm._l((_vm.typeList),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1)],1),_c('FormItem',{attrs:{\"label\":\"名称\"}},[_c('Input',{attrs:{\"placeholder\":\"名称\"},model:{value:(_vm.menuFm.name),callback:function ($$v) {_vm.$set(_vm.menuFm, \"name\", $$v)},expression:\"menuFm.name\"}})],1),_c('FormItem',{attrs:{\"label\":\"标识\"}},[_c('Input',{attrs:{\"placeholder\":\"标识\"},model:{value:(_vm.menuFm.code),callback:function ($$v) {_vm.$set(_vm.menuFm, \"code\", $$v)},expression:\"menuFm.code\"}})],1),_c('FormItem',{attrs:{\"label\":\"角色\"}},[_c('Select',{attrs:{\"multiple\":\"\",\"placeholder\":\"请选择角色\"},model:{value:(_vm.menuFm.role_ids),callback:function ($$v) {_vm.$set(_vm.menuFm, \"role_ids\", $$v)},expression:\"menuFm.role_ids\"}},_vm._l((_vm.roles.data),function(item){return _c('Option',{key:item.id,attrs:{\"value\":item.id}},[_vm._v(\"\\n                        \"+_vm._s(item.name)+\"\\n                    \")])}),1)],1),(_vm.menuFm.type == 1)?_c('div',[_c('FormItem',{attrs:{\"label\":\"路由名称\"}},[_c('Input',{attrs:{\"placeholder\":\"路由名称\"},model:{value:(_vm.menuFm.options.name),callback:function ($$v) {_vm.$set(_vm.menuFm.options, \"name\", $$v)},expression:\"menuFm.options.name\"}})],1),_c('FormItem',{attrs:{\"label\":\"路由路径\"}},[_c('Input',{attrs:{\"placeholder\":\"路由路径\"},model:{value:(_vm.menuFm.options.path),callback:function ($$v) {_vm.$set(_vm.menuFm.options, \"path\", $$v)},expression:\"menuFm.options.path\"}})],1)],1):_vm._e(),_c('FormItem',{attrs:{\"label\":\"图标\"}},[_c('Input',{attrs:{\"placeholder\":\"图标\"},model:{value:(_vm.menuFm.icon),callback:function ($$v) {_vm.$set(_vm.menuFm, \"icon\", $$v)},expression:\"menuFm.icon\"}})],1),_c('FormItem',{attrs:{\"label\":\"排序\"}},[_c('InputNumber',{attrs:{\"max\":9999,\"min\":0,\"placeholder\":\"排序值 越小越靠前\"},model:{value:(_vm.menuFm.sort),callback:function ($$v) {_vm.$set(_vm.menuFm, \"sort\", $$v)},expression:\"menuFm.sort\"}})],1),_c('Alert',{attrs:{\"closable\":\"\"}},[_vm._v(_vm._s(_vm.menuFm))])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <Row :gutter=\"32\">\n            <Col span=\"20\">\n                &nbsp;\n            </Col>\n            <Col span=\"4\" class=\"list-tlbr\">\n                <Button type=\"success\" @click=\"addTopMenu()\">增加顶级部门</Button>\n            </Col>\n        </Row>\n        <!--<Row type=\"flex\" justify=\"space-between\" align=\"top\">-->\n        <!--<Col span=\"20\">-->\n        <!--&nbsp;-->\n        <!--</Col>-->\n        <!--<Col span=\"4\" class=\"list-tlbr\">-->\n        <!--<Button  type=\"success\" @click=\"createNode(0,0)\">增加顶级节点</Button>-->\n        <!--</Col>-->\n        <!--</Row>-->\n\n\n        <Tree :data=\"nodes\" :render=\"renderContent\"></Tree>\n        <Modal\n                v-model=\"is_add_menuing\"\n                :title=\"title\"\n                :loading=\"loading\"\n                class-name=\"ce-modal\"\n                :mask-closable=\"false\"\n                :scrollable=\"true\"\n                @on-ok=\"saveMenu\"\n                @on-cancel=\"cancelAddMenu\"\n        >\n            <Form :model=\"menuFm\" label-position=\"top\" ref=\"menuFm\" :rules=\"menuFmRules\">\n                <FormItem label=\"类型\" prop=\"type\">\n                    <Select v-model=\"menuFm.type\" placeholder=\"类型\" @on-change=\"typeChange\">\n                        <Option v-for=\"item in typeList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n                    </Select>\n                </FormItem>\n                <FormItem label=\"名称\">\n                    <!--prop=\"name\"-->\n                    <Input v-model=\"menuFm.name\" placeholder=\"名称\"/>\n                </FormItem>\n                <FormItem label=\"标识\">\n                    <!--prop=\"code\"-->\n                    <Input v-model=\"menuFm.code\" placeholder=\"标识\"/>\n                </FormItem>\n                <FormItem label=\"角色\">\n                    <Select v-model=\"menuFm.role_ids\"\n                            multiple\n                            placeholder=\"请选择角色\"\n                    >\n                        <Option v-for=\"item in roles.data\"\n                                :value=\"item.id\"\n                                :key=\"item.id\">\n                            {{ item.name }}\n                        </Option>\n                    </Select>\n                </FormItem>\n\n                <div v-if=\"menuFm.type == 1\">\n                    <FormItem label=\"路由名称\">\n                        <Input v-model=\"menuFm.options.name\" placeholder=\"路由名称\"/>\n                    </FormItem>\n                    <FormItem label=\"路由路径\">\n                        <Input v-model=\"menuFm.options.path\" placeholder=\"路由路径\"/>\n                    </FormItem>\n                </div>\n\n                <FormItem label=\"图标\">\n                    <Input v-model=\"menuFm.icon\" placeholder=\"图标\"/>\n                </FormItem>\n                <FormItem label=\"排序\">\n                    <InputNumber :max=\"9999\" :min=\"0\" placeholder=\"排序值 越小越靠前\" v-model=\"menuFm.sort\"/>\n                </FormItem>\n                <Alert closable>{{ menuFm }}</Alert>\n            </Form>\n        </Modal>\n    </div>\n\n\n</template>\n<script>\n    import {mapGetters} from 'vuex'\n\n    export default {\n        name: 'Departments',\n        async created() {\n            await this.$store.dispatch('department/lists', {is_show_tree: 1});\n            await this.$store.dispatch('role/lists', {status: 1, per_page: 100});\n            await this.$store.dispatch('system/changeSpining',{spining:false});\n        },\n        computed: {\n            ...mapGetters({\n                nodes: 'department/nodes',\n                roles: 'role/lists',\n            })\n        },\n        data() {\n            const validateCode = (rule, value, callback) => {\n                if (!value) {\n                    return callback(new Error('值不能为空'));\n                }\n                let validateFieldRequest = {\n                    type: rule.field,\n                    value: value,\n                    id: this.menuFm.id\n                };\n                this.$store.dispatch('validateCode', validateFieldRequest).then(result => {\n                    if (result) {\n                        callback(new Error('已经存在了，请重新输入！'));\n                    } else {\n                        callback();\n                    }\n                });\n            };\n            return {\n                title: '增加节点',\n                typeList: [\n                    {\n                        value: 1,\n                        label: '页面'\n                    },\n                    {\n                        value: 2,\n                        label: '菜单'\n                    },\n                    {\n                        value: 3,\n                        label: '操作'\n                    },\n                ],\n                menuFm: {\n                    name: '',\n                    code: '',\n                    type: 1,\n                    role_ids: [],\n                    options: {\n                        tree_path: '0'\n                    },\n                    icon: 'md-apps',\n                    sort: 0,\n                    pid: 0\n                },\n                loading: true,\n                menuFmRules: {\n                    name: [\n                        {required: true, message: '菜单名称不能为空', trigger: 'blur'},\n                        {type: 'string', min: 2, message: '至少2个字符', trigger: 'blur'},\n                    ],\n                    // type: [\n                    //     {required: true, message: '类型必须选择', trigger: 'blur'},\n                    // ],\n                    code: [\n                        {required: true, message: '节点标识不能为空', trigger: 'blur'},\n                        {type: 'string', min: 2, message: '至少2个字符', trigger: 'blur'},\n                        {validator: validateCode, trigger: 'blur'}\n                    ],\n                    sort: [\n                        {required: false, type: 'integer', message: '排序只能是数字', trigger: 'blur'}\n                    ]\n                },\n                is_add_menuing: false,\n                buttonProps: {\n                    size: 'small',\n                }\n            }\n        },\n        methods: {\n            getNodeTag(type) {\n                if (type == 1) {\n                    return '#2d8cf0';\n                } else if (type == 2) {\n                    return '#19be6b';\n                } else {\n                    return '#f90';\n                }\n            },\n            typeChange(option) {\n                console.info(option);\n            },\n            createNode(data) {\n                this.menuFm.pid = data.pid;\n                if (data.pid > 0) {\n                    // 子节点\n                    if (data.type == 1) {\n                        this.menuFm.type = 3;\n                    } else if (data.type == 2) {\n                        this.menuFm.type = 1;\n                    }\n                } else {\n                    // 根节点\n                    this.menuFm.type = 2;\n                }\n                this.title = '增加节点';\n                this.is_add_menuing = true;\n            },\n            editNode(data) {\n                this.title = '编辑节点';\n                this.menuFm = {\n                    name: data.name,\n                    code: data.code,\n                    type: data.type,\n                    options: data.options,\n                    icon: data.icon,\n                    sort: 0,\n                    pid: data.pid,\n                    role_ids: data.role_ids,\n                    id: data.id\n                };\n                this.is_add_menuing = true;\n            },\n            renderContent(h, {root, node, data}) {\n                let roleTags = [];\n                data.roles.forEach((item) => {\n                    roleTags.push(h('Tag', item.name));\n                });\n                return h('span', {\n                    class: {\n                        'menus-span': true,\n                    },\n                    style: {\n                        display: 'inline-block',\n                        width: '100%',\n                    }\n                }, [\n                    h('span', [\n\n                        h('Icon', {\n                            props: {\n                                type: data.icon,\n                                color: this.getNodeTag(data.type)\n                            },\n                            style: {\n                                marginRight: '8px'\n                            }\n                        }),\n                        h('span', data.name),\n\n                        h('span', {\n                            style: {\n                                marginLeft: '6px'\n                            }\n                        }, roleTags),\n\n\n                    ]),\n                    h('span', {\n                        style: {\n                            display: 'inline-block',\n                            float: 'right',\n                            marginRight: '16px'\n                        }\n                    }, [\n                        h('Button', {\n                            props: Object.assign({}, this.buttonProps, {\n                                icon: 'ios-add',\n                                disabled: data.type == 3\n                            }),\n                            style: {\n                                marginRight: '8px'\n                            },\n                            on: {\n                                click: () => {\n                                    // this.menuFm.pid = data.id;\n                                    // this.menuFm.type = 2;\n                                    // this.createNode(data.id, data.type);\n                                    this.createNode(data);\n                                }\n                            }\n                        }),\n\n                        h('Button', {\n                            props: Object.assign({}, this.buttonProps, {\n                                icon: 'ios-create-outline'\n                            }),\n                            style: {\n                                marginRight: '8px'\n                            },\n                            on: {\n                                click: () => {\n                                    this.editNode(data);\n                                }\n                            }\n                        }),\n\n                        h('Poptip', {\n\n                            props: {\n                                confirm: true,\n                                title: '确认要删除',\n                                transfer: true,\n                            },\n                            on: {\n                                'on-ok': () => {\n                                    this.remove(root, node, data)\n                                }\n                            }\n                        }, [\n                            h('Button', {\n                                props: Object.assign({}, this.buttonProps, {\n                                    icon: 'ios-remove',\n                                    disabled: data.children && true\n                                }),\n\n                            })\n                        ]),\n                    ])\n                ]);\n            },\n            addTopMenu() {\n                this.initFmData();\n                this.createNode(this.menuFm);\n            },\n            cancelAddMenu() {\n                this.initFmData();\n            },\n            initFmData() {\n                this.menuFm = {\n                    name: '',\n                    code: '',\n                    type: 1,\n                    options: {\n                        tree_path: '0',\n                    },\n                    icon: 'md-apps',\n                    sort: 0,\n                    pid: 0\n                };\n            },\n            saveMenu() {\n                this.$refs['menuFm'].validate((valid) => {\n                    if (valid) {\n                        // this.$Message.success('Success!');\n                        this.loading = !this.loading;\n                        let action = 'department/create';\n                        if (this.menuFm.id && this.menuFm.id > 0) action = 'department/edit';\n                        this.$store.dispatch(action, this.menuFm).then(rsp => {\n                            this.loading = !this.loading;\n                            this.cancelAddMenu();\n                            this.is_add_menuing = false;\n                        }).catch(rsp => {\n                            this.loading = !this.loading;\n                            this.$Message.error('保存失败，请重试!');\n                            return false;\n                        })\n                    } else {\n                        this.loading = !this.loading;\n                        return false;\n                    }\n                })\n            },\n            append(data) {\n                const children = data.children || [];\n                children.push({\n                    title: 'appended node',\n                    expand: true\n                });\n                this.$set(data, 'children', children);\n            },\n            remove(root, node, data) {\n                this.$store.dispatch('department/delete', {id: data.id}).then(rsp => {\n                    // this.$store.dispatch('getMenus');\n                    // const parentKey = root.find(el => el === node).parent;\n                    // const parent = root.find(el => el.nodeKey === parentKey).node;\n                    // const index = parent.children.indexOf(data);\n                    // parent.children.splice(index, 1);\n                })\n            }\n        }\n    }\n</script>\n\n\n<style lang=\"less\">\n    .menus-span {\n        &:hover {\n            color: #2d8cf0;\n            background-color: #f8f8f9;\n        }\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/iview-loader/index.js??ref--0-2!./departments.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/iview-loader/index.js??ref--0-2!./departments.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./departments.vue?vue&type=template&id=2c555a70&\"\nimport script from \"./departments.vue?vue&type=script&lang=js&\"\nexport * from \"./departments.vue?vue&type=script&lang=js&\"\nimport style0 from \"./departments.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// extracted by mini-css-extract-plugin","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/iview-loader/index.js??ref--0-2!./departments.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/iview-loader/index.js??ref--0-2!./departments.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}